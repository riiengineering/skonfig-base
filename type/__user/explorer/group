#!/bin/sh
#
# 2011 Steven Armstrong (steven-cdist at armstrong.cc)
# 2024 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#
# Get an existing group's group entry.
#
# Attention: depending on which code path is taken the output may or
# may not include the group's members.
#

if test -s "${__object:?}/parameter/gid"
then
	gid=$(cat "${__object:?}/parameter/gid")

	if command -v getent >/dev/null 2>&1
	then
		getent group "${gid}" || :
	elif command -v dcsl >/dev/null 2>&1
	then
		# Mac OS X uses Open Directory to manage users and groups.
		# /etc/group is only used in single-user mode.
		dscl -q . -read "/Groups/${name}" | awk -F ':( +|$)' '
		/^ / {
			sub(/^ */, "")
			e[e_last] = e[e_last] $0
			next
		}
		$2 {
			e[$1] = $2
			e_last = $1
		}

		END {
			sub(/ +/, ",", e["GroupMembership"])
			printf "%s:%s:%u:%s"ORS,
				e["RecordName"],
				e["Password"],
				e["PrimaryGroupID"],
				e["GroupMembership"]
		}'
	elif test -s /etc/group
	then
		# NOTE: the logic to differentiate between
		#       group names and gids in getent(1) differs between libcs, e.g.
		#       * glibc, musl, FreeBSD, NetBSD treat everything they can parse
		#         as an integer as a (numeric) gid.
		#       * OpenBSD looks up by group name first and if no match is found,
		#         tries to parse as gid.
		#
		#       This behaviour does not necessarily match what e.g. chgrp(1)
		#       does (hint, on the systems I checked: what OpenBSD getent does).
		#       chgrp and OpenBSD's getent can be "forced" to interpret the
		#       value as a numeric gid if it is prefixed with 0s. We allow for
		#       this behaviour, too.
		awk -F: -v g="${gid}" '
		BEGIN {
			if (g == (g + 0)) {
				# convert g to integer gid if it is a number
				gid = (g + 0)
			}
		}

		g == $1          { group_by_name = $0 }
		gid && gid == $3 { group_by_gid  = $0 }

		END {
			print (group_by_name ? group_by_name : group_by_gid)
		}' /etc/group
	fi
fi

#!/bin/sh -e
#
# 2011-2015 Steven Armstrong (steven-cdist at armstrong.cc)
# 2011 Nico Schottelius (nico-cdist at schottelius.org)
# 2024-2025 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

os=$(cat "${__global:?}/explorer/os")

name=${__object_id:?}
state_should=$(cat "${__object:?}/parameter/state")

quote_ifneeded() {
	# copied from type/__uci/files/functions.sh
	for _arg
	do
		shift
		if test -n "$(printf %s "${_arg}" | tr -d -c '\t\n \042-\047\050-\052\073-\077\133\\`|~' | tr -c '' '.')"
		then
			# needs quoting
			set -- "$@" "'$(printf '%s\n' "${_arg}" | sed -e "s/'/'\\\\''/g")'"
		else
			set -- "$@" "${_arg}"
		fi
	done
	unset -v _arg

	# NOTE: Use printf because POSIX echo interprets escape sequences
	printf '%s' "$*"
}

case ${os}
in
	(aix)
		# shellcheck source=SCRIPTDIR/aix.sh
		. "${__type:?}/gencode-remote/aix.sh" ;;
	(freebsd)
		# shellcheck source=SCRIPTDIR/freebsd.sh
		. "${__type:?}/gencode-remote/freebsd.sh" ;;
	(netbsd|openbsd)
		# shellcheck source=SCRIPTDIR/bsd_group.sh
		. "${__type:?}/gencode-remote/bsd_group.sh" ;;
	(*)
		# shellcheck source=SCRIPTDIR/usermod.sh
		. "${__type:?}/gencode-remote/usermod.sh" ;;
esac

case ${state_should}
in
	(present)
		if cut -d: -f1 "${__object:?}/explorer/group" | grep -qxF -e "${name}"
		then
			# change existing groupâ€™s properties
			set --
			for parameter in "${__object:?}"/parameter/*
			do
				property=${parameter##*/}

				test "${property}" != 'state' || continue

				unset -v current_value
				new_value=$(cat "${parameter}")

				case ${property}
				in
					(password)
						current_value=$(cut -d: -f2 "${__object:?}/explorer/gshadow")
						;;
					(gid)
						current_value=$(cut -d: -f3 "${__object:?}/explorer/group")
						;;
				esac

				if test "${new_value}" != "${current_value-}"
				then
					set -- "$@" "${property}"${new_value:+="${new_value}"}
					echo "change ${property} ${new_value} ${current_value}" >>"${__messages_out:?}"
				fi
			done

			if test $# -gt 0
			then
				do_modify_group "${name}" "$@"
				echo mod >>"${__messages_out:?}"
			fi
		else
			# create a new group
			set --
			for parameter in "${__object:?}"/parameter/*
			do
				property=${parameter##*/}
				test "${property}" != 'state' || continue

				new_value=$(cat "${parameter}")
				set -- "$@" "${property}"${new_value:+="${new_value}"}
			done

			do_create_group "${name}" "$@"
			echo add >>"${__messages_out:?}"
		fi
		;;
	(absent)
		if cut -d: -f1 "${__object:?}/explorer/group" | grep -qxF -e "${name}"
		then
			# delete existing
			do_delete_group "${name}"
			echo del >>"${__messages_out:?}"
			# legacy, use del only in the future, like for cdist-type__user(7)
			echo remove >>"${__messages_out:?}"
		fi
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac

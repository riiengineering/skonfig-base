#!/bin/sh -e
#
# 2020 Ander Punnar (ander at kvlt.ee)
# 2022 Travis Paul (tr at vispaul.me)
# 2023,2025 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

version_ge() {
    # usage: version_ge version_is min_version_expected
    #
    # compares two version numbers (up to three numeric components separated
    # with dots)
    # returns 0 if `version_is` >= `min_version_expected`, 1 otherwise.
    #
    # NOTES: if the lowest value of the two version numbers is equal to
    #        `min_version_expected`, `version_is` must be the same or larger.
    #        `-k n,n` instead of `-k n` is required for some sort(1)s.
    printf '%s\n' "$1" "$2" \
    | sort -t. -n -k1,1 -k2,2 -k3,3 \
    | { read -r _x; test "${_x}" = "$2"; }
}

os=$(cat "${__global:?}/explorer/os")

src="/${__object_id:?}"
dst=$(sed 's|/$||' "${__object:?}/parameter/destination")

mkdir "${__object:?}/files"

case ${src}
in
    (*.tar|*.tar.*|*.t??|*.t???)
        # require tar to unpack tar
        case ${os}
        in
            (gentoo)
                __package app-arch/tar
                ;;
            (aix|netbsd)
                # part of the base system
                ;;
            (openwrt)
                # OpenWrt ships BusyBox tar in the base system
                ;;
            (*)
                __package tar
                ;;
        esac
        ;;
esac

case ${src}
in
    (*.7z)
        case ${os}
        in
            (alpine|debian|devuan|ubuntu)
                os_version=$(cat "${__global:?}/explorer/os_version")
                case ${os}
                in
                    (alpine)
                        distro_7z_min=3.17 ;;
                    (debian)
                        distro_7z_min=12 ;;
                    (devuan)
                        distro_7z_min=5 ;;
                    (ubuntu)
                        distro_7z_min=22.04 ;;
                esac

                if version_ge "${os_version}" "${distro_7z_min}"
                then
                    __package 7zip
                    cmd=7zz
                else
                    __package p7zip
                    cmd=7zr
                fi
                ;;
            (aix|centos|almalinux|eurolinux|rocky|fedora|redhat)
                __package p7zip
                cmd=7za
                ;;
            (freebsd|netbsd)
                __package 7-zip
                cmd=7zz
                ;;
            (gentoo)
                __package app-arch/7zip
                cmd=7zz
                ;;
            (openwrt)
                echo 'the 7z format is not supported on OpenWrt' >&2
                exit 1
                ;;
            (openbsd|*)
                __package p7zip
                cmd=7zr
                ;;
        esac

        printf '%s e -aoa -o%s %s\n' \
            "${cmd:?}" \
            "$(shquot "${dst}")" \
            "$(shquot "${src}")" \
        >"${__object:?}/files/extract-cmd"
        ;;
    (*.cpio)
        case ${os}
        in
            (gentoo)
                __package app-arch/cpio
                ;;
            (aix|freebsd|netbsd|openbsd)
                # part of the base system
                ;;
            (openwrt)
                echo 'the cpio format is not supported on OpenWrt' >&2
                exit 1
                ;;
            (*)
                __package cpio
                ;;
        esac
        ;;
    (*.gz|*.tgz)
        case ${os}
        in
            (alpine|openwrt)
                # use BusyBox gzip(1)
                ;;
            (aix|freebsd|netbsd|openbsd)
                # part of the base system
                ;;
            (gentoo)
                __package app-arch/gzip
                ;;
            (*)
                __package gzip
                ;;
        esac
        ;;
    (*.bz2|*.tbz2)
        case ${os}
        in
            (aix|freebsd|netbsd)
                # part of the base system
            ;;
            (gentoo)
                __package app-arch/bzip2
                ;;
            (*)
                __package bzip2
                ;;
        esac
        ;;
    (*.lzma|*.xz|*.txz)
        case ${os}
        in
            (alpine|centos|almalinux|eurolinux|rocky|openbsd|openwrt)
                __package xz
            ;;
            (debian|ubuntu|devuan)
                __package xz-utils
                ;;
            (freebsd|netbsd)
                # part of the base system
                ;;
            (gentoo)
                __package app-arch/xz-utils
                ;;
        esac
        ;;
    (*.pax)
        case ${os}
        in
            (aix)
                # part of the base system
                ;;
            (gentoo)
                __package app-arch/pax
                ;;
            (*)
                __package pax
                ;;
        esac
        ;;
    (*.rar)
        case ${os}
        in
            (gentoo)
                __package app-arch/unrar
                ;;
            (*)
                __package unrar
                ;;
        esac

        printf 'unrar x -o+ %s %s\n' \
            "$(shquot "${src}")" \
            "$(shquot "${dst}/")" \
        >"${__object:?}/files/extract-cmd"
        ;;
    (*.xar)
        case ${os}
        in
            (aix)
                # XAR is not supported on AIX
                exit 1
                ;;
            (gentoo)
                __package app-arch/xar
                ;;
            (*)
                __package xar
                ;;
        esac
       ;;
    (*.zip)
        case ${os}
        in
            (freebsd|netbsd)
                # part of the base system
            ;;
            (gentoo)
                __package app-arch/unzip
                ;;
            (*)
                __package unzip
                ;;
        esac

        printf 'unzip -o %s -d %s\n' \
            "$(shquot "${src}")" \
            "$(shquot "${dst}")" \
        >"${__object:?}/files/extract-cmd"
        ;;
    (*.Z)
        case ${os}
        in
            (aix|freebsd|netbsd|openbsd)
                # part of the base system
                ;;
            (alpine)
                # BusyBox gzip(1) supports decompression of POSIX compress files
                ;;
            (debian|devuan|ubuntu)
                # /bin/uncompress is provided by gzip
                __package gzip
                ;;
            (gentoo)
                __package app-arch/ncompress
                ;;
            (openwrt)
                printf 'the POSIX compress format is not supported on %s' "${os}" >&2
                exit 1
                ;;
        esac
        ;;
    (*.zst)
        case ${os}
        in
            (freebsd)
                # part of the base system
                ;;
            (aix|*)
                __package zstd
                ;;
        esac
        ;;
esac

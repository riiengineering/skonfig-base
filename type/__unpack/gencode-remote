#!/bin/sh -e
#
# 2020 Ander Punnar (ander at kvlt.ee)
# 2021,2023,2025 Dennis Camera (dennis.camera at riiengineering.ch)
# 2022 Travis Paul (tr at vispaul.me)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

shquot() {
sed -e "s/'/'\\\\''/g" -e "1s/^/'/" -e "\$s/\$/'/" <<-EOF
$*
EOF
}

if grep -q -x -e 'missing' -e 'match' "${__object:?}/explorer/state"
then
    exit 0
fi

os=$(cat "${__global:?}/explorer/os")

src="/${__object_id:?}"

dst=$(sed 's|/$||' "${__object:?}/parameter/destination")

cmd=''

case ${src}
in
    # https://git.savannah.gnu.org/cgit/tar.git/tree/src/suffix.c?h=release_1_34#n29
    (*.tar|*.tgz|*.tar.*|*.txz|*.tbz2)
        cmd="mkdir -p $(shquot "${dst}") && tar --directory=$(shquot "${dst}") --extract --file=$(shquot "${src}")"

        if [ -f "${__object:?}/parameter/tar-strip" ]
        then
            tar_strip=$(cat "${__object:?}/parameter/tar-strip")

            cmd="${cmd} --strip-components=${tar_strip}"
        fi

        if [ -f "${__object:?}/parameter/tar-extra-args" ]
        then
            tar_extra_args=$(cat "${__object:?}/parameter/tar-extra-args")

            cmd="${cmd} ${tar_extra_args}"
        fi
        ;;
    (*.bz2)
        cmd="bunzip2 --stdout $(shquot "${src}") >$(shquot "${dst}")"
        ;;
    (*.cpio)
        cmd="cd $(shquot "${dst}") && cpio -i <$(shquot "${src}")"
        ;;
    (*.gz)
        cmd="gunzip --stdout $(shquot "${src}") >$(shquot "${dst}")"
        ;;
    (*.lzma|*.xz)
        cmd="xz --uncompress --stdout $(shquot "${src}") >$(shquot "${dst}")"
        ;;
    (*.pax)
        cmd="cd $(shquot "${dst}") && pax -r <$(shquot "${src}")"
        ;;
    (*.rar)
        cmd="unrar x -o+ $(shquot "${src}") $(shquot "${dst}/")"
        ;;
    (*.xar)
        cmd="xar -C $(shquot "${dst}") -xf $(shquot "${src}")"
        ;;
    (*.Z)
        case ${os}
        in
            (alpine)
                # use gzip(1)
                cmd="cd $(shquot "${dst}") && gunzip -k $(shquot "${src}")"
                ;;
            (*)
                cmd="cd $(shquot "${dst}") && uncompress -f -k -- $(shquot "${src}")"
                ;;
        esac
        ;;
    (*.zip)
        cmd="unzip -o $(shquot "${src}") -d $(shquot "${dst}")"
        ;;
    (*.zstd)
        cmd="zstd -d <$(shquot "${src}") >$(shquot "${dst}")"
        ;;
    (*)
        cat "${__object:?}/files/extract-cmd"
        ;;
esac

if [ -f "${__object:?}/parameter/backup-destination" ]
then
    backup_dst="${dst:?}.skonfig__unpack_backup_$(date +%s)"
    printf 'if [ -e %s ]; then mv %s %s; fi\n' \
        "$(shquot "${dst}")" "$(shquot "${dst}")" "$(shquot "${backup_dst}")"
    printf 'backed up %s to %s\n' "${dst}" "${backup_dst}" >>"${__messages_out:?}"
fi

printf '%s\n' "${cmd}"
printf 'unpacked to %s\n' "${dst}" >>"${__messages_out:?}"

if [ -f "${__object:?}/parameter/sum-file" ]
then
    sum_file=$(cat "${__object:?}/parameter/sum-file")
else
    sum_file="${src}.skonfig__unpack_sum"
fi

printf "cksum %s | awk '{ print \$1\$2 }' >%s\\n" \
    "$(shquot "${src}")" "$(shquot "${sum_file}")"

if [ ! -f "${__object:?}/parameter/preserve-archive" ]
then
    printf 'rm -f %s\n' "$(shquot "${src}")"
    printf 'removed archive %s\n' "${src}" >>"${__messages_out:?}"
fi

if [ -f "${__object:?}/parameter/onchange" ]
then
    cat "${__object:?}/parameter/onchange"
fi

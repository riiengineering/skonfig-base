#!/bin/sh -e
#
# 2011-2012 Nico Schottelius (nico-cdist at schottelius.org)
# 2013-2022 Steven Armstrong (steven-cdist armstrong.cc)
# 2023 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

# shellcheck source=SCRIPTDIR/files/functions.sh
. "${__type:?}/files/functions.sh"

destination="/${__object_id:?}"

read -r state_should <"${__object:?}/parameter/state"
read -r type <"${__object:?}/explorer/type"

mkdir "${__object:?}/files"

upload_file=false


if test -s "${__object:?}/parameter/source"
then
	# use user provided file as source
	source=$(cat "${__object:?}/parameter/source")
	case ${source}
	in
		(-)
			source="${__object:?}/stdin" ;;
	esac

	if test ! -f "${source}" && test ! -c "${source}"
	then
		printf 'Source %s does not exist.\n' "${source}" >&2
		# NOTE: ignore for dry runs, because the file could be generated by
		#       skonfig (e.g. __staged_file).
		test -n "${__cdist_dry_run+y}" || exit 1
	fi
fi


case ${state_should}
in
	(present)
		case ${type}
		in
			(file)
				if test -s "${__object:?}/parameter/source"
				then
					cksum_is=$(cat "${__object:?}/explorer/cksum")
					cksum_should=$(cksum <"${source}")

					if test "${cksum_is}" != "${cksum_should}"
					then
						# destination is a regular file, but not the right one
						upload_file=true
					fi
				fi
				;;
			(*)
				# replace destination with file (either --source if given, or an
				# empty file otherwise)
				upload_file=true
				;;
		esac
		;;
	(exists)
		case ${type}
		in
			(file)
				# nothing to do
				;;
			(*)
				upload_file=true
				;;
		esac
		;;
	(pre-exists)
		if test -f "${__object:?}/parameter/source"
		then
			echo 'Parameter --source is mutually exclusive with --state pre-exists' >&2
			exit 1
		fi

		case ${type}
		in
			(file)
				# nothing to do
				exit 0
				;;
			(none)
				printf 'File %s does not exist\n' "$(shquot "${destination}")" >&2
				exit 1
				;;
			(directory|symlink)
				printf 'File %s exists and is a %s, but should be a regular file\n' >&2 \
					"$(shquot "${destination}")" "${type}"
				exit 1
				;;
			(*)
				printf 'File or directory %s is in an unknown state\n' >&2 \
					"$(shquot "${destination}")"
				exit 1
				;;
		esac
		;;
	(absent)
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac

if ${upload_file?}
then
	if test -n "${source}"
	then
		# upload user-provided file
		echo upload >>"${__messages_out:?}"
	else
		# create an empty file
		echo create >>"${__messages_out:?}"

		# when creating an empty file we create it locally and then
		# upload it so that permissions can be set before moving the
		# file into place.
		source="${__object:?}/files/empty"
		:>"${source}"
	fi

	# tell gencode-remote that we created or uploaded a file and that it must
	# set all attributes no matter what the explorer retreived
	touch "${__object:?}/files/set-attributes"

	# upload file to temp location
	if command -v mktemp >/dev/null 2>&1
	then
		# make temporary file location less predictable by using mktemp(1)
		tmp_suffix_file=$(mktemp -u "${__object:?}/tmp.XXXXXX")
		upload_destination="${destination:?}.${tmp_suffix_file##*/tmp.}"
	else
		# fall back to __cdist_object_marker if mktemp(1) is not available
		upload_destination="${destination:?}.${__cdist_object_marker:?}"
	fi

	# tell gencode-remote to where we uploaded the file so it can move
	# it to its final destination.
	cat <<-EOF >"${__object:?}/files/upload-destination"
	${upload_destination}
	EOF

	# IPv6 fix
	if expr "${__target_host:?}" : '[0-9a-fA-F:]+$' >/dev/null
	then
		target_host="[${__target_host:?}]"
	else
		target_host="${__target_host:?}"
	fi

	remote_cmd="cat >$(shquot "${upload_destination:?}")"

	if test -f "${__object:?}/parameter/mode"
	then
		# the user specified --mode, so we restrict the umask until
		# the correct mode can be applied in code-remote
		remote_cmd="umask 077 && ${remote_cmd:?}"
	fi

	printf '%s %s %s <%s\n' \
		"${__remote_exec:?}" \
		"$(shquot "${target_host:?}")" \
		"$(shquot "${remote_cmd:?}")" \
		"$(shquot "${source:?}")"
fi

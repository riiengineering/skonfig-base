#!/bin/sh -e
#
# 2011-2013 Nico Schottelius (nico-cdist at schottelius.org)
# 2013-2022 Steven Armstrong (steven-cdist armstrong.cc)
# 2023 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

# shellcheck source=SCRIPTDIR/files/functions.sh
. "${__type:?}/files/functions.sh"

destination="/${__object_id:?}"
read -r state_should <"${__object:?}/parameter/state"
read -r type <"${__object:?}/explorer/type"

stat_file="${__object:?}/explorer/stat"

# set-attributes is created if file is created or uploaded in gencode-local
# also fire --onchange if set-attributes exists because it means the file was changed
if test -f "${__object:?}/files/set-attributes"
then
	set_attributes=true
	fire_onchange=true
else
	set_attributes=false
	fire_onchange=false
fi

case ${state_should}
in
	(present|exists)
		if test -f "${__object:?}/files/upload-destination"
		then
			final_destination=${destination}
			# we change the 'global' $destination here so we can change the
			# of the uploaded file before moving it to its final destination
			destination=$(cat "${__object:?}/files/upload-destination")
		fi

		# NOTE: chmod needs to happen as the last, because chown/chgrp can alter
		#       the file mode by clearing S_ISUID and S_ISGID bits, cf. chown(2)
		if test -f "${__object:?}/parameter/owner"
		then
			owner_should=$(cat "${__object:?}/parameter/owner")
			owner_is=$(get_current_value "${stat_file:?}" owner "${owner_should}")

			if test -f "${__object:?}/parameter/group"
			then
				group_should=$(cat "${__object:?}/parameter/group")
				group_is=$(get_current_value "${stat_file:?}" group "${group_should}")

				if ${set_attributes?} || test "${group_is}" != "${group_should}"
				then
					own=:${group_should}
				fi
			fi

			if ${set_attributes?} \
				|| test -n "${own-}" \
				|| test "${owner_is}" != "${owner_should}"
			then
				printf '%s %s\n' >>"${__messages_out:?}" \
					chown "${owner_should}" \
					${own:+chgrp "${own#:}"}

				own=${owner_should}${own}
			fi

			if test -n "${own}"
			then
				set_remote_path chown
				printf 'chown %s %s\n' \
					"$(shquot "${own}")" \
					"$(shquot "${destination}")"
				fire_onchange=true
			fi
		elif test -f "${__object:?}/parameter/group"
		then
			group_should=$(cat "${__object:?}/parameter/group")
			group_is=$(get_current_value "${stat_file:?}" group "${group_should}")

			if ${set_attributes?} || test "${group_should}" != "${group_is}"
			then
				set_remote_path chgrp
				printf 'chgrp %s %s\n' \
					"$(shquot "${group_should}")" \
					"$(shquot "${destination}")"
				printf 'chgrp %s\n' "${group_should}" >>"${__messages_out:?}"
				fire_onchange=true
			fi
		fi

		if test -f "${__object:?}/parameter/mode"
		then
			mode_should=$(cat "${__object:?}/parameter/mode")
			mode_is=$(get_current_value "${stat_file:?}" mode "${mode_should}")

			# Convert to four-digit octal number (printf interprets
			# strings with leading 0s as octal!)
			mode_should=$(printf '%04o' "0${mode_should}")

			if ${set_attributes?} || test "${mode_should}" != "${mode_is}"
			then
				set_remote_path chmod
				printf 'chmod %s %s\n' \
					"$(shquot "${mode_should}")" \
					"$(shquot "${destination}")"
				printf 'chmod %s\n' "${mode_should}" >>"${__messages_out:?}"
				fire_onchange=true
			fi
		fi

		if test -n "${final_destination-}"
		then
			# move uploaded file into place, after setting its attributes
			# NOTE: it's important to remove the $final_destination first,
			#       because if it is a directory, mv(1) will copy the
			#       file into the directory instead of replacing it.
			printf 'rm -R -f %s\n' \
				"$(shquot "${final_destination}")"
			printf 'mv %s %s\n' \
				"$(shquot "${destination}")" \
				"$(shquot "${final_destination}")"
		fi
		;;
	(absent)
		case ${type}
		in
			(file|symlink)
				printf 'rm -f %s\n' "$(shquot "${destination}")"
				echo remove >>"${__messages_out:?}"
				fire_onchange=true
				;;
		esac
		;;
	(pre-exists)
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac

if ${fire_onchange?} && test -s "${__object:?}/parameter/onchange"
then
	cat "${__object:?}/parameter/onchange"
fi

#!/bin/sh -e
#
# 2010-2011 Nico Schottelius (nico-cdist at schottelius.org)
# 2020-2023,2025 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#
# Prints the OS version installed on the target.
#
# NB: the output varies across different operating systems and is not normalized
# in any way.
#

rc_getvar() {
   awk -F= -v varname="$2" '
      function unquote(s) {
         if (s ~ /^".*"$/ || s ~ /^'\''.*'\''$/) {
            return substr(s, 2, length(s) - 2)
         } else {
            return s
         }
      }
      $1 == varname { print unquote(substr($0, index($0, "=") + 1)) }' "$1"
}

case $("${__explorer:?}/os")
in
   (adelie)
      rc_getvar /etc/os-release VERSION_ID
      ;;
   (alpine)
      cat /etc/alpine-release
      ;;
   (amazon)
      cat /etc/system-release
      ;;
   (archlinux)
      # empty, but well...
      cat /etc/arch-release
      ;;
   (beos)
      # Original BeOS ended at 5.1 (Exp/Dano)
      # Zeta then continued versions at 6.0 (e.g. Zeta 1.1 is uname -r: 6.0.1).
      if libbe_version=$(version /boot/system/lib/libbe.so 2>/dev/null)
      then
         printf '%s\n' "${libbe_version#R}"
      else
         uname -r
      fi
      ;;
   (checkpoint)
      awk '{version=$NF; printf("%s\n", substr(version, 2))}' /etc/cp-release
      ;;
   (chimera)
      cat /etc/chimera-release
      ;;
   (crux)
      crux | sed -e 's/^.*version //'
      ;;
   (debian)
      debian_version=$(cat /etc/debian_version)
      case ${debian_version}
      in
         (testing/unstable)
            # previous to Debian 4.0 testing/unstable was used
            # cf. https://metadata.ftp-master.debian.org/changelogs/main/b/base-files/base-files_11_changelog
            echo 3.99
            ;;
         (*/sid)
            # sid versions don't have a number, so we decode by codename:
            case ${debian_version%%/*}
            in
               (forky) echo 13.99 ;;
               (trixie) echo 12.99 ;;
               (bookworm) echo 11.99 ;;
               (bullseye) echo 10.99 ;;
               (buster) echo 9.99 ;;
               (stretch) echo 8.99 ;;
               (jessie) echo 7.99 ;;
               (wheezy) echo 6.99 ;;
               (squeeze) echo 5.99 ;;
               (lenny) echo 4.99 ;;
               (*) echo 99.99 ;;
            esac
            ;;
         (*)
            echo "${debian_version}"
            ;;
      esac
      ;;
   (devuan)
      devuan_version=$(cat /etc/devuan_version)
      case ${devuan_version}
      in
         ([0-9]*)
            ;;
         (*)
            devuan_codename=${devuan_version}
            # decode codename
            case ${devuan_codename%%/*}
            in
               (excalibur) devuan_version=6 ;;
               (daedalus) devuan_version=5 ;;
               (chimaera) devuan_version=4 ;;
               (beowulf) devuan_version=3 ;;
               (ascii) devuan_version=2 ;;
               (jessie) devuan_version=1 ;;
               (*) exit 1 ;;
            esac

            case ${devuan_codename}
            in
               (*/ceres)
                  # subtract .01 (analogue Debian)
                  devuan_version=$((devuan_version - 1)).99
                  ;;
               (*/*)
                  printf 'Unknown suffix (%s) in version (%s)\n' \
                     "${devuan_codename#*/}" "${devuan_codename}" >&2
                  exit 1
                  ;;
            esac
            ;;
      esac

      echo "${devuan_version}"
      ;;
   (fedora)
      sed -e 's/^Fedora\( Core\)* release \(.*\) (.*)$/\2/' /etc/fedora-release
      ;;
   (freebsd)
      # Apparently uname -r is not a reliable way to get the patch level.
      # See: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=251743
      if command -v freebsd-version >/dev/null 2>&1
      then
         # get userland version
         freebsd-version -u
      else
         # fallback to kernel release for FreeBSD < 10.0
         uname -r
      fi
      ;;
   (gentoo)
      cat /etc/gentoo-release
      ;;
   (haiku)
      # Haiku restarted versioning at 1.0, being a rewrite of BeOS.
      # uname -r is hard-coded to "1", so we ignore it.
      libbe_version=$(version /boot/system/lib/libbe.so 2>/dev/null) || exit 0
      printf '%s\n' "${libbe_version#R}"
      ;;
   (macosx)
      # NOTE: Legacy versions (< 10.3) do not support options
      sw_vers | awk -F ':[ \t]+' '$1 == "ProductVersion" { print $2 }'
      ;;
   (openwrt)
      if test -r /etc/openwrt_release
      then
         # since the LEDE fork (17.01 or OpenWrt 18.06), /etc/openwrt_version
         # contains a commit ID (e.g. r7808-ef686b7292) instead of the
         # release version.
         rc_getvar /etc/openwrt_release DISTRIB_RELEASE
      else
         cat /etc/openwrt_version
      fi
      ;;
   (owl)
      cat /etc/owl-release
      ;;
   (redhat|centos|almalinux|eurolinux|rocky|mitel|scientific)
      sed -e 's/^\([A-Za-z]* \)*release \(.*\) (.*)$/\2/' /etc/redhat-release
      ;;
   (slackware)
      sed -e 's/^Slackware //' /etc/slackware-version
      ;;
   (suse)
      if test -f /etc/os-release
      then
         rc_getvar /etc/os-release VERSION_ID
      else
         # fall back to original /etc/SuSE-release (deprecated since SuSE 13,
         # removed in 15)
         sed -n -e 's/^VERSION *= *//p' /etc/SuSE-release
      fi
      ;;
   (ubuntu|pop-os)
      if command -v lsb_release >/dev/null 2>&1
      then
         lsb_release -sr
      elif test -r /usr/lib/os-release
      then
         # fallback to /usr/lib/os-release if lsb_release is not present (like
         # on minimized Ubuntu installations)
         rc_getvar /usr/lib/os-release VERSION_ID
      elif test -r /etc/lsb-release
      then
         # extract DISTRIB_RELEASE= variable from /etc/lsb-release on old
         # versions without /usr/lib/os-release.
         rc_getvar /etc/lsb-release DISTRIB_RELEASE
      fi
      ;;
   (*bsd|solaris)
      # NOTE: this section has to be at the bottom because of the wildcard.
      #       The freebsd section above should take precedence.
      uname -r
      ;;
   (*)
      if test -r /etc/os-release
      then
         rc_getvar /etc/os-release VERSION_ID
      fi
      ;;
esac

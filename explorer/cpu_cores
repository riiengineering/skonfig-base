#!/bin/sh -e
#
# 2014 Daniel Heule  (hda at sfs.biz)
# 2014 Thomas Oettli (otho at sfs.biz)
# 2021 Dennis Camera (cdist at dtnr.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
# Prints the number of CPU cores currently online  (over all sockets, w/o SMT)
#

maybe() {
	if test $(($1)) -gt 0
	then
		echo $(($1))
		exit
	fi
}


# arch-specific

if expr "$(uname -m)" : 'ppc64' >/dev/null && command -v ppc64_cpu >/dev/null 2>&1
then
	# use ppc64_cpu when on ppc64*
	# e.g.
	# # ppc64_cpu --cores-on
	# Number of cores online = 10
	cores=$(ppc64_cpu --cores-on | sed 's/.*= *//')
	maybe $((cores))
fi


# OS-specific

case $("${__explorer:?}/os")
in
	(freebsd|netbsd)
		command -p sysctl -n hw.ncpu
		;;
	(macosx)
		sysctl -n hw.physicalcpu
		;;
	(openbsd)
		sysctl -n hw.ncpuonline
		;;
	(*)
		# NOTE: Prefer /proc/cpuinfo if possible because some container engines
		#       only fake /proc/cpuinfo.
		if test -r /proc/cpuinfo
		then
			cores=$(grep '^core id	:' /proc/cpuinfo | sort -u | wc -l)
			maybe $((cores))
		fi

		if command -v lscpu >/dev/null 2>&1
		then
			cores=$(
				lscpu -p \
				| awk -F, '/^[^#]/ { x[$2]++ } END { for (k in x) i++; print i }')
			maybe $((cores))
		fi

		maybe 1  # fallback
		;;
esac
